#!/bin/bash

# shellcheck disable=SC2155 # Declare and assign separately to avoid masking return values.

source "${__CUSTOM_CONSOLE_UTIL}"/urls/__fetch_urls
source "${__CUSTOM_CONSOLE_UTIL}"/urls/__view_urls
source "${__CUSTOM_CONSOLE_UTIL}"/urls/fzf_header/__alias_header
source "${__CUSTOM_CONSOLE_UTIL}"/urls/fzf_header/__urls_header
source "${__CUSTOM_CONSOLE_UTIL}"/urls/fzf_header/__new_alias_header
source "${__CUSTOM_CONSOLE_UTIL}"/urls/fzf_header/__new_url_header

URLS_FILE_PATH="${__CUSTOM_CONSOLE_UTIL}/urls/urls.txt"

function main() {

  local aliasHeader="$(__alias_header)"

  while true; do
    local selectedStr="$(__fetch_urls | cut -d ' ' -f 1 | uniq | \
                          fzf --height=65%\
                              --header "${aliasHeader}" \
                              --bind "ctrl-o:execute-silent(source $__CUSTOM_CONSOLE_UTIL/urls/__open_urls; __open_urls {})" \
                              --bind "double-click:execute-silent(source $__CUSTOM_CONSOLE_UTIL/urls/__open_urls; __open_urls {})" \
                              --bind "ctrl-r:execute-silent(source $__CUSTOM_CONSOLE_UTIL/urls/__remove_urls; __remove_urls {})" \
                              --bind "ctrl-r:+reload(source ${__CUSTOM_CONSOLE_UTIL}/urls/__fetch_urls; __fetch_urls | cut -d ' ' -f 1 | uniq)")"
    if [[ -z "${selectedStr}" ]]; then
      break
    fi
    if [[ "${selectedStr}" == "NEW" ]]; then
      add_new_url
    elif [[ "${selectedStr}" == "----------------------" ]]; then
      continue
    else
      view_urls "${selectedStr}"
    fi
  done
}

function sort_urls_file() {

    [ ! -f "${URLS_FILE_PATH}" ] && return
    sort "${URLS_FILE_PATH}" > "${URLS_FILE_PATH}_sorted"
    mv "${URLS_FILE_PATH}_sorted" "${URLS_FILE_PATH}"
}

function add_new_url() {

  local aliasStr
  local urlStr
  local newUrlStr

  local newAliasHeader="$(__new_alias_header)"
  local aliasStr="$(echo "" | grep "x" |\
                      fzf --height 1%\
                          --info=hidden\
                          --bind 'enter:print-query'\
                          --header "${newAliasHeader}")"
  if [[ -z "${aliasStr}" ]]; then
    return
  fi
  local newUrlHeader="$(__new_url_header)"
  local urlStr="$(echo "" | grep "x" |\
                      fzf --height 1%\
                          --info=hidden\
                          --bind 'enter:print-query'\
                          --header "${newUrlHeader}")"
  if [[ -z "${urlStr}" ]]; then
    return
  fi
  newUrlStr="${aliasStr} ${urlStr}"
  echo "${newUrlStr}" >> "${URLS_FILE_PATH}"
  sort_urls_file
}

function view_urls() {

    local urlsHeader="$(__urls_header "${selectedStr}")"
    __view_urls "${selectedStr}" | \
      fzf -m \
          --height=65% \
          --header "${urlsHeader}" \
          --bind "ctrl-o:execute(open {})" \
          --bind "ctrl-c:preview(source $__CUSTOM_CONSOLE_UTIL/urls/fzf_action/__copy_url; __copy_url {})" \
          --bind "enter:ignore" \
          --bind "double-click:execute(open {})"
}

main